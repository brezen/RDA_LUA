
#=====================================
##  1 ##
######## 芯片描述信息 ########
## ASIC type: gallite/8808/8809
CT_ASIC         ?= 8809

#=====================================
##  2 ##
######### FLASH类型 #########
## FLASH type: flsh_spi16m/flsh_spi32m
FLSH_MODEL      ?= flsh_spi16m

## RAM SIZE
ifeq "${strip ${FLSH_MODEL}}" "flsh_spi16m"
    RAM_SIZE_FLAG:= __16Mbit__
endif
ifeq "${strip ${FLSH_MODEL}}" "flsh_spi32m"
    RAM_SIZE_FLAG:= __64Mbit__
endif

#=====================================
##  3 ##
######### OpenAT宏 #########
AM_OPENAT_SUPPORT := TRUE

#=====================================
##  4 ##
######### 平台模块类型 #########
## AM MODEL type: A6300A/A6300V/A9351
AM_MODEL ?= AM002_LUA

# A6300V开启代码压缩
CT_COMPRESS_CODE_SECTION := yes

#+\NEW\liweiqiang\2013.5.11\开机自解压luazip目录下文件支持,压缩算法lzma
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# lzma压缩功能支持
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
export AM_LZMA_SUPPORT := TRUE

ifeq ($(strip $(AM_LUA_SUPPORT)), TRUE)
    LOCAL_EXPORT_FLAG += AM_LZMA_SUPPORT
endif
#-\NEW\liweiqiang\2013.5.11\开机自解压luazip目录下文件支持,压缩算法lzma

#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# LUA脚本功能支持
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
export AM_LUA_SUPPORT := TRUE       ###
                                    # Option1: TRUE     #enable
                                    # Option1: FALSE    #disable

ifeq ($(strip $(AM_LUA_SUPPORT)), TRUE)
    export AM_LUA_PLATFORM:=coolsand
    
    LOCAL_EXPORT_FLAG += AM_LUA_SUPPORT
    
    LOCAL_EXPORT_FLAG += LUA_SCRIPT_SIZE=${LUA_SCRIPT_SIZE}
    LOCAL_EXPORT_FLAG += LUA_USE_COOLSAND_SXR
    
    #将lua执行的错误保存在文件luaerrinfo.txt中
    LOCAL_EXPORT_FLAG += LUA_SAVE_LAST_ERROR

    #lua内存优化,目前尚未调试暂时关闭
    LOCAL_EXPORT_FLAG += LUA_OPTIMIZE_MEMORY=0

    #定义DLMALLOC内存池大小为64K
    LOCAL_EXPORT_FLAG += DLMALLOC_DEFAULT_GRANULARITY=\(64U*1024U\)
    
    #内存分配器dlmalloc
    LOCAL_EXPORT_FLAG += USE_DLMALLOC
    #dlmalloc配置
    LOCAL_EXPORT_FLAG += USE_DL_PREFIX
    #使用dlmalloc作为lua的内存分配器
    LOCAL_EXPORT_FLAG += USE_DLMALLOC_AS_LUA_ALLOCF    
    
    #16+16FLASH优化
    LOCAL_EXPORT_FLAG += LOW_MEMORY_SUPPORT
endif

#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# 版本定义
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
include ${SOFT_WORKDIR}/project/${PROJ_NAME}/build/version.mk

